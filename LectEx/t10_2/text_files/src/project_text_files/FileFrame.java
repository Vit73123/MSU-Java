
package project_text_files;

import java.io.BufferedReader;
import java.io.File;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;

import java.io.FileWriter;
import java.io.IOException;

import java.io.InputStreamReader;

import javax.swing.JFileChooser;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;

/**
 *
 * @author Vladimir
 */
public class FileFrame extends javax.swing.JFrame {
    @SuppressWarnings("compatibility:3591176165783353202")
    private static final long serialVersionUID = 1L;

    JFileChooser jFileChooser1 = new JFileChooser();

    /** Creates new form FrameOpenFile */
    public FileFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        buttonOpen = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        buttonRead = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(483, 300));
        getContentPane().setLayout(null);

        buttonOpen.setText("Открыть файл");
        buttonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpenActionPerformed(evt);
            }
        });
        getContentPane().add(buttonOpen);
        buttonOpen.setBounds(30, 30, 200, 23);

        buttonSave.setText("Сохранить файл");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        getContentPane().add(buttonSave);
        buttonSave.setBounds(250, 30, 200, 23);

        buttonRead.setText("Построчное чтение файла");
        buttonRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReadActionPerformed(evt);
            }
        });
        getContentPane().add(buttonRead);
        buttonRead.setBounds(30, 70, 200, 23);

        jScrollPane1.setViewportView(jTextPane1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 120, 420, 180);

        setBounds(0, 0, 501, 375);
    }//GEN-END:initComponents

    private void buttonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpenActionPerformed
        // TODO add your handling code here:
        if (JFileChooser.APPROVE_OPTION == jFileChooser1.showOpenDialog(this)) {
            File file = new File(jFileChooser1.getSelectedFile().getPath());
            int size = (int) file.length();
            int c = 0;
            FileReader in;
            try {
                in = new FileReader(file);
                char[] data = new char[size];
                while (in.ready()) {
                    c += in.read(data, c, size - c);
                }
                in.close();
                jTextPane1.setText(new String(data, 0, c));
            } catch (FileNotFoundException f) {
            } catch (IOException f) {
            }
        }
    }//GEN-LAST:event_buttonOpenActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        if (JFileChooser.APPROVE_OPTION == jFileChooser1.showSaveDialog(this)) {
            File file = new File (jFileChooser1.getSelectedFile().getPath());
            FileWriter out;
            try {
                out = new FileWriter(file);
                String text = jTextPane1.getText();
                out.write(text);
                out.close();
            } catch (IOException f) {
                // TODO
            }
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReadActionPerformed
        // TODO add your handling code here:
        File file = new File(jFileChooser1.getSelectedFile().getPath());
        // int size = (int) file.length();
        // int c = 0;
        try {
            FileInputStream fstream = new FileInputStream(file);    // ("C:/file.txt")
            BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
            String strLine;
            while ((strLine = br.readLine()) != null) {
                jTextPane1.getDocument().insertString(jTextPane1.getDocument().getLength(), strLine + "\n",
                                                       new SimpleAttributeSet());
                System.out.println(strLine);
            }
        } catch (IOException e) {
            System.out.println("Ошибка");
        } catch (BadLocationException e) {
        }
    }//GEN-LAST:event_buttonReadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(FileFrame.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(FileFrame.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(FileFrame.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(FileFrame.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new FileFrame().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOpen;
    private javax.swing.JButton buttonRead;
    private javax.swing.JButton buttonSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

}
