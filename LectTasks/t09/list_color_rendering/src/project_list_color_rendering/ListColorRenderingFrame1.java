
package project_list_color_rendering;

import java.awt.Color;

import java.awt.Component;

import java.awt.Dimension;
import java.awt.FontMetrics;
import java.awt.Graphics;

import java.util.ArrayList;

import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Vladimir
 */
public class ListColorRenderingFrame1 extends javax.swing.JFrame {
    @SuppressWarnings("compatibility:-7741274428024920082")
    private static final long serialVersionUID = -1260996629486456401L;

    final ArrayList<Color> colors = new ArrayList<Color>();
    final int SIZE = 24;

    /** Creates new form ListColorRenderingFrame1 */
    public ListColorRenderingFrame1() {
        colors.add(new Color(100, 100, 100));
        colors.add(new Color(10, 100, 100));
        colors.add(new Color(100, 20, 200));
        colors.add(Color.CYAN);
        colors.add(Color.PINK);
        colors.add(Color.GREEN);
        colors.add(Color.ORANGE);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        colorList = new javax.swing.JList(colors.toArray());
        jScrollPane2 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new Dimension(400, 300));

        colorList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        colorList.setCellRenderer(new ColorCellRenderer());
        colorList.setVisibleRowCount(6);
        colorList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                colorListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(colorList);

        text.setBackground(colors.get(0));
        text.setLineWrap(true);
        text.setText("“екст отображаетс€ на фоне, выбранном в списке");
        text.setWrapStyleWord(true);
        jScrollPane2.setViewportView(text);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );
    }//GEN-END:initComponents

    private void colorListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_colorListValueChanged
        // TODO add your handling code here:
        Color color = (Color) colorList.getSelectedValue();
        text.setBackground(color);
    }//GEN-LAST:event_colorListValueChanged
    
    @SuppressWarnings({ "oracle.jdeveloper.java.inner-class-serializable",
                        "oracle.jdeveloper.java.serialversionuid-field-missing" })
    class ColorCellRenderer extends JPanel implements ListCellRenderer {

        Color color;
        Color background;
        Color foreground;

        @Override
        public Component getListCellRendererComponent(
            JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            // TODO Implement this method
            color = (Color) value;
            background = isSelected ? list.getSelectionBackground() : color;
            foreground = isSelected ? list.getSelectionForeground() : list.getForeground();
            return this;
        }
        
        public void paintComponent(Graphics g) {
            String text = color.toString();
            FontMetrics fm = g.getFontMetrics(this.getFont());
            g.setColor(background);
            g.fillRect(0, 0, getWidth(), getHeight());
            g.setColor(foreground);
            // g.setFont(font);
            g.drawString(text, 0, fm.getAscent());
        }
        
        public Dimension getPreferredSize() {
            // String text = font.getFamily();
            // Graphics g - getGraphics();
            // FopntMetrics fm = g.getFontMetrics(font);
            // font.toString().length();
            return new Dimension(260, 35);
        }
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListColorRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListColorRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListColorRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListColorRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new ListColorRenderingFrame1().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList colorList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea text;
    // End of variables declaration//GEN-END:variables

}
