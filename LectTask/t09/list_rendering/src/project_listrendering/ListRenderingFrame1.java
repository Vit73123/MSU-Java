
package project_listrendering;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;

import java.util.ArrayList;

import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Vladimir
 */
public class ListRenderingFrame1 extends javax.swing.JFrame {

    private ArrayList<Font> fonts = new ArrayList<>();
    final int SIZE;
    
    private Font font;
    private Color background;
    private Color foreground;

    /** Creates new form ListRenderingFrame1 */
    @SuppressWarnings("unchecked")
    public ListRenderingFrame1() {
        SIZE = 24;
        fonts.add(new Font("Serif", Font.PLAIN, SIZE));
        fonts.add(new Font("SansSerif", Font.PLAIN, SIZE));
        fonts.add(new Font("Monospaced", Font.PLAIN, SIZE));
        fonts.add(new Font("Dialog", Font.PLAIN, SIZE));
        fonts.add(new Font("DialogInput", Font.PLAIN, SIZE));
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        scrollPane = new javax.swing.JScrollPane(fontList);
        fontList = new javax.swing.JList(fonts.toArray());
        p = new javax.swing.JPanel();
        textPane = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea("Текст отображается шрифтом выбранным в списке");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(400, 300));
        getContentPane().setLayout(null);

        fontList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fontList.setCellRenderer(new FontCellRenderer());
        fontList.setVisibleRowCount(4);
        fontList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListSelectionListener(evt);
            }
        });
        scrollPane.setViewportView(fontList);

        getContentPane().add(scrollPane);
        scrollPane.setBounds(30, 110, 330, 160);

        p.add(scrollPane);
        getContentPane().add(p);
        p.setBounds(70, 120, 240, 120);

        text.setColumns(20);
        text.setFont(fonts.get(0));
        text.setLineWrap(true);
        text.setRows(5);
        text.setWrapStyleWord(true);
        textPane.setViewportView(text);

        getContentPane().add(textPane);
        textPane.setBounds(0, 0, 400, 100);
    }//GEN-END:initComponents

    private void ListSelectionListener(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListSelectionListener
        // TODO add your handling code here:
        Font font = (Font) fontList.getSelectedValue();
        text.setFont(font);
    }//GEN-LAST:event_ListSelectionListener

    @SuppressWarnings({ "oracle.jdeveloper.java.inner-class-serializable",
                        "oracle.jdeveloper.java.serialversionuid-field-missing" })
    class FontCellRenderer extends JPanel implements ListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int i, boolean isSelected, boolean cellHasFocus) {
            // TODO Implement this method
            font = (Font) value;
            background = isSelected ? list.getSelectionBackground() : list.getBackground();
            foreground = isSelected ? list.getSelectionForeground() : list.getForeground();
            return this;
        }

        public void paintComponent(Graphics g) {
            String text = font.getFamily();
            FontMetrics fm = g.getFontMetrics(font);
            g.setColor(background);
            g.fillRect(0, 0, getWidth(), getHeight());
            g.setColor(foreground);
            g.setFont(font);
            g.drawString(text, 0, fm.getAscent());
        }

        public Dimension getPreferredSize() {
            String text = font.getFamily();
            Graphics g = getGraphics();
            FontMetrics fm = g.getFontMetrics(font);
            return new Dimension(fm.stringWidth(text), fm.getHeight());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(ListRenderingFrame1.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new ListRenderingFrame1().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList fontList;
    private javax.swing.JPanel p;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea text;
    private javax.swing.JScrollPane textPane;
    // End of variables declaration//GEN-END:variables

}
